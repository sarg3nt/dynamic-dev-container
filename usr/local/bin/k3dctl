#!/bin/bash

# Bash script for managing K3D cluster with devcontainers.

set -euo pipefail
arg=${1:="up"}

# Gets some directories, paths and variables used in the script
name=$CLUSTER_NAME
hostname=$(cat /etc/hostname)

# Brings cluster up
clusterup() {
  # Allow errors in case the cluster doesn't exist
  set +euo pipefail
  k3d cluster get "$name" | grep "$name" &>/dev/null
  if [ $? != 0 ]; then
    # Be strict about error checking again
    set -euo pipefail
    k3d cluster create --config "$K3D_CONFIG_PATH"
  fi

  # Start the cluster
  k3d cluster start "$name" --wait
  docker network connect "$NETWORK_NAME" "$hostname" 2>/dev/null || true
  echo "cluster is now running"
}

# Tear cluster down
clusterdown() {
  set +euo pipefail
  k3d cluster get "$name" | grep "$name" &>/dev/null
  if [ $? != 0 ]; then
    echo "Cluster $name doesn't exist skipping deletion"
  fi

  set -euo pipefail
  k3d cluster delete "$name"
  docker network disconnect "$NETWORK_NAME" "$hostname" 2>/dev/null || true
}

if [ "$arg" == "up" ]; then
  clusterup
  exit 0
fi

if [ "$arg" == "down" ]; then
  clusterdown
  exit 0
fi

# Restart cluster
if [ "$arg" == "restart" ]; then
  clusterdown
  clusterup
  exit 0
fi

# Prints help
if [ "$arg" == "help" ]; then
  cat <<EOF
Creates k3d clusters and retrieves various information related to the development environment

Usage:
    k3dctl [command]

Available Commands:
    up          brings the cluster up
    down        brings the cluster down
    network     retrieves cidr of the k3d network
    info        prints info about the environment
    restart     tears the cluster down and then redeploys it.
    help        prints this help command
EOF
  exit 0
fi

# Prints docker network CIDR
if [ "$arg" == "network" ]; then
  cidr_block=$(docker network inspect "$NETWORK_NAME" | jq '. [0].IPAM.Config[0].Subnet' | tr -d '"')
  base_addr=${cidr_block%???}
  first_addr=$(echo "$base_addr" | awk -F'.' '{print $1,$2,$3,240}' OFS='.')
  range=$first_addr/29
  echo "$range"
  exit 0
fi

# Prints variables loaded by the script
if [ "$arg" == "info" ]; then
  echo -e """
    NETWORK_NAME               = $NETWORK_NAME
    DOCKER_HOSTNAME            = $hostname
    CLUSTER_NAME               = $name
    K3D_CONFIG_PATH            = $K3D_CONFIG_PATH
    """
  exit 0
fi

# Pass command directly through to k3d if none of the arguments match.
k3d "$@"
