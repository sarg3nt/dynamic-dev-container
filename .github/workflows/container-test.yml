name: Container Testing

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    paths:
      - "home/**"
      - "scripts/**"
      - "usr/**"
      - "workflow_scripts/**"
      - ".dockerignore"
      - ".mise.toml"
      - ".pre-commit-config.yaml"
      - "Dockerfile"
      - "requirements.txt"
      - "pyproject.toml"
      - "package.json"
      - "**/*.sh"
  workflow_dispatch: # Allows manual triggering

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}

permissions:
  contents: read

jobs:
  container-build-test:
    name: Container Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            ghcr.io:443
            registry-1.docker.io:443
            auth.docker.io:443
            production.cloudflare.docker.com:443

      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Log Into Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Test Container
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        with:
          context: .
          push: false
          tags: test-container:${{ github.sha }}
          load: true

      - name: Test Container - Basic Functionality
        run: |
          echo "Testing basic container functionality..."
          docker run --rm test-container:${{ github.sha }} whoami
          docker run --rm test-container:${{ github.sha }} pwd
          docker run --rm test-container:${{ github.sha }} ls -la /home/vscode

      - name: Test Container - Mise Installation
        run: |
          echo "Testing mise installation and configuration..."
          docker run --rm test-container:${{ github.sha }} mise --version
          docker run --rm test-container:${{ github.sha }} mise list --installed

      - name: Test Container - Core Development Tools
        run: |
          echo "Testing core development tools..."
          # Test Git
          docker run --rm test-container:${{ github.sha }} git --version

          # Test Python
          docker run --rm test-container:${{ github.sha }} python3 --version || echo "Python not found - checking if installed via mise"
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && python --version" || echo "Python test skipped"

          # Test Node.js
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && node --version" || echo "Node test skipped"

          # Test Go
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && go version" || echo "Go test skipped"

          # Test .NET
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && dotnet --version" || echo ".NET test skipped"

      - name: Test Container - Kubernetes Tools
        run: |
          echo "Testing Kubernetes tools..."
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && kubectl version --client" || echo "kubectl test skipped"
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && helm version" || echo "helm test skipped"
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && k9s version" || echo "k9s test skipped"

      - name: Test Container - HashiCorp Tools
        run: |
          echo "Testing HashiCorp tools..."
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && opentofu version" || echo "opentofu test skipped"
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && packer version" || echo "packer test skipped"

      - name: Test Container - Shell Configuration
        run: |
          echo "Testing shell configuration..."
          docker run --rm test-container:${{ github.sha }} bash -c "echo \$SHELL"
          docker run --rm test-container:${{ github.sha }} bash -c "source ~/.bashrc && echo 'Shell config loaded successfully'"

      - name: Test Container - File Permissions
        run: |
          echo "Testing file permissions..."
          docker run --rm test-container:${{ github.sha }} bash -c "ls -la /home/vscode/ | head -10"
          docker run --rm test-container:${{ github.sha }} bash -c "id"

      - name: Test Container - Essential Scripts
        run: |
          echo "Testing essential scripts..."
          docker run --rm test-container:${{ github.sha }} bash -c "test -f /usr/bin/lib/sh/colors.sh && echo 'colors.sh found'"
          docker run --rm test-container:${{ github.sha }} bash -c "test -f /usr/bin/lib/sh/log.sh && echo 'log.sh found'"
          docker run --rm test-container:${{ github.sha }} bash -c "test -f /usr/local/bin/help && echo 'help command found'"

  container-vulnerability-check:
    name: Container Vulnerability Check
    runs-on: ubuntu-latest
    needs: container-build-test
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            ghcr.io:443
            registry-1.docker.io:443
            auth.docker.io:443
            production.cloudflare.docker.com:443
            public.ecr.aws:443

      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Build Test Container
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        with:
          context: .
          push: false
          tags: vuln-test:${{ github.sha }}
          load: true

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5
        with:
          image-ref: "vuln-test:${{ github.sha }}"
          format: "table"
          severity: "CRITICAL,HIGH,MEDIUM"
          exit-code: "1"
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_SKIP_JAVA_DB_UPDATE: true
