// Dev Container Configuration File
// cspell: ignore pwsh Gruntfuggly darkriszty ciiqr sarg3nt dbaeumer docomment doesnt esbenp euskadi githd hediet huizhou kato koehler mhutchie mypy naumovs omnisharp psioniq tamasfe tftpl tomoki yzhang gofumpt gopls
{
  // See the root README.md file for more detailed instructions!
  // You must change the following when using this file in a new project:
  // - "name" = The name of the project and is fairly arbitrary.
  // - "runArgs" = The name of the container and should be "your-repo-dev". Do NOT remove the "-dev".
  // - "mounts" = The first two mounts source lines should be unique:
  //   * your-repo-bashhistory
  //   * your-repo-plugins
  // - "containerEnv" = Add any "containerEnv" variables the list.
  //   These are variables that you want to be able to set on the host and passed into the container.
  "name": "Generic Dev Container",
  // Using the latest version of the generic-dev-container image
  "image": "ghcr.io/sarg3nt/generic-dev-container:latest",
  "runArgs": ["--name=generic-dev-container"],
  // Mounts
  "mounts": [
    // User-defined Mounts (Customizable)
    {
      "source": "generic-dev-container-shellhistory",
      "target": "/commandhistory",
      "type": "volume"
    },
    {
      "source": "generic-dev-container-plugins",
      "target": "/home/vscode/.vscode-server/extensions",
      "type": "volume"
    },
    // Dev Container Mounts (Do NOT Change)
    // Should be the same for all dev containers as the scripts rely on them.
    {
      // Docker
      "source": "${localEnv:HOME}/.docker",
      "target": "/home/vscode/.docker-localhost",
      "type": "bind"
    },
    {
      // Kubernetes (Should have a configured kube config in your kube directory if using kubernetes)
      "source": "${localEnv:HOME}/.kube",
      "target": "/home/vscode/.kube-localhost",
      "type": "bind"
    },
    {
      // SSH
      "source": "${localEnv:HOME}/.ssh",
      "target": "/home/vscode/.ssh-localhost",
      "type": "bind"
    },
    {
      "source": "/var/run/docker.sock",
      "target": "/var/run/docker-host.sock",
      "type": "bind"
    }
    /* {
      // Workspace Mount
      "source": "${localWorkspaceFolder}/..",
      "target": "/workspaces",
      "type": "bind"
    } */
  ],
  "containerEnv": {
    "TZ": "America/Los_Angeles", // Timezone
    "HOST_PATH": "${localWorkspaceFolder}", // Eg. '/home/my-user/src/my-project'
    "WORKSPACE_PATH": "${containerWorkspaceFolder}", // Eg. '/workspaces/my-project'
    "PYTHON_PATH": "/home/vscode/.local/share/mise/installs/python", // Location of our Python modules
    "ZSH_THEME": "${localEnv:ZSH_THEME}", // Will use local ZSH_THEME if set, otherwise will use Starship
    "KUBE_EDITOR": "vi",
    "TERM": "xterm-256color",
    "NODE_EXTRA_CA_CERTS": "/etc/pki/ca-trust/source/anchors/zscaler.crt",
    "TYPE_CHECKING": "true", // Enable type checking for Python
    "GITHUB_TOKEN": "${localEnv:GITHUB_TOKEN}", // GitHub API token for rate limiting (optional)
    // CUSTOM USER ENVIRONMENT VARIABLES
    "MY_CUSTOM_VAR": "my_custom_value" // Example of a custom environment variable
  },
  // Custom scripts for Dev Container environment (modifying Docker image)
  "initializeCommand": [".devcontainer/initialize_command.sh"],
  "postStartCommand": [".devcontainer/post_start_command.sh"],
  "postCreateCommand": [".devcontainer/post_create_command.sh"],
  "remoteUser": "vscode",
  "init": true, // Ensures the container is initialized with the default entrypoint.
  "overrideCommand": false, // Prevents overriding the container's default command.
  // VS Code Settings
  "customizations": {
    "vscode": {
      "extensions": [
        // #### Begin Github ####
        "GitHub.copilot", // GitHub Copilot AI assistant
        "GitHub.copilot-chat", // GitHub Copilot Chat
        "GitHub.vscode-pull-request-github", // GitHub pull request management
        "GitHub.github-vscode-theme", // GitHub theme
        "GitHub.remotehub", // GitHub remote repositories
        "mhutchie.git-graph", // Git graph visualization
        "huizhou.githd", // Git history diff
        // #### End Github ####

        // #### Begin Go ####
        "golang.go", // Go language support
        "golang.go-nightly", // Go nightly builds support
        // #### End Go ####

        // #### Begin Python ####
        "ms-python.python", // Python language support
        "ms-python.mypy-type-checker", // MyPy type checker
        "charliermarsh.ruff", // Ruff linter and formatter
        // #### End Python ####

        // #### Begin Markdown ####
        "yzhang.markdown-all-in-one", // Markdown all-in-one
        "darkriszty.markdown-table-prettify", // Markdown table prettifier
        // #### End Markdown ####

        // #### Begin Shell/Bash ####
        "foxundermoon.shell-format", // Shell script formatter
        "timonwong.shellcheck", // Shell script linter
        // #### End Shell/Bash ####

        // #### Begin Kubernetes/Helm ####
        "ms-kubernetes-tools.vscode-kubernetes-tools", // Kubernetes tools
        "tim-koehler.helm-intellisense", // Helm IntelliSense
        "redhat.vscode-yaml", // YAML language support
        // #### End Kubernetes/Helm ####

        // #### Begin Terraform/OpenTofu ####
        "opentofu.vscode-opentofu", // OpenTofu/Terraform support
        // #### End Terraform/OpenTofu ####

        // #### Begin JavaScript/TypeScript ####
        "dbaeumer.vscode-eslint", // ESLint for JavaScript/TypeScript
        "esbenp.prettier-vscode", // Prettier code formatter
        // #### End JavaScript/TypeScript ####

        // #### Begin Packer ####
        "szTheory.vscode-packer-powertools", // Packer tools
        // #### End Packer ####

        // #### Begin Core Extensions ####
        "albert.TabOut", // Tab out of brackets/quotes
        "ciiqr.encode", // Encode/decode utilities
        "EditorConfig.EditorConfig", // EditorConfig support
        "euskadi31.json-pretty-printer", // JSON pretty printer
        "Gruntfuggly.todo-tree", // TODO tree view
        "hediet.vscode-drawio", // Draw.io integration
        "IronGeek.vscode-env", // Environment variables support
        "k--kato.docomment", // Documentation comment generator
        "ms-azuretools.vscode-docker", // Docker support
        "naumovs.color-highlight", // Color highlighting
        "psioniq.psi-header", // File header management
        "PKief.material-icon-theme", // Material icon theme
        "RapidAPI.vscode-rapidapi-client", // RapidAPI client
        "streetsidesoftware.code-spell-checker", // Spell checker
        "tamasfe.even-better-toml", // TOML language support
        "tomoki1207.pdf" // PDF viewer
        // #### End Core Extensions ####
      ],
      "settings": {
        // #### Begin Core VS Code Settings ####
        "code-runner.enableAppInsights": false,
        "code-runner.showExecutionMessage": false,
        "code-runner.runInTerminal": true,
        "dev.containers.dockerCredentialHelper": false,
        "editor.detectIndentation": false,
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.formatOnSave": true,
        "editor.renderWhitespace": "all",
        "editor.rulers": [120, 180],
        "files.eol": "\n",
        "files.watcherExclude": {
          "**/node_modules/*/**": true,
          "**/.git/objects/**": true,
          "**/.git/subtree-cache/**": true,
          "**/.hg/**": true
        },
        "files.associations": {
          "*.yaml.tftpl": "yaml",
          "*.hcl.tftpl": "hcl",
          "*.env.tftpl": "shellscript",
          "*.json.tftpl": "json",
          "Jenkinsfile*": "groovy",
          ".env": "env",
          "*.env.*": "env"
        },
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/bin/zsh"
          }
        },
        "terminal.integrated.automationProfile.linux": {
          "path": "/bin/zsh"
        },
        "terminal.integrated.defaultProfile.linux": "zsh",
        "reformat": true,
        // #### End Core VS Code Settings ####
        
        // #### Begin Go Settings ####
        "go.buildTags": "",
        "go.toolsEnvVars": {
          "CGO_ENABLED": "0"
        },
        "go.useLanguageServer": true,
        "go.testEnvVars": {
          "CGO_ENABLED": "1"
        },
        "go.testFlags": [
          "-v",
          "-race"
        ],
        "go.testTimeout": "30s",
        "go.coverOnSingleTest": true,
        "go.coverOnSingleTestFile": true,
        "go.coverOnTestPackage": true,
        "go.lintTool": "golangci-lint",
        "go.lintOnSave": "package",
        "[go]": {
          "editor.codeActionsOnSave": {
            "source.organizeImports": "always"
          }
        },
        "gopls": {
          "usePlaceholders": false,
          "staticcheck": true,
          "formatting.gofumpt": true
        },
        // #### End Go Settings ####

        // #### Begin Python Settings ####
        "python.pythonPath": "/home/vscode/.local/share/mise/installs/python/latest/bin/python",
        "python.defaultInterpreterPath": "/home/vscode/.local/share/mise/installs/python/latest/bin/python",
        "autopep8.args": ["--max-line-length=180"],
        "python.analysis.ignore": ["*"],
        "[python]": {
          "editor.formatOnSave": true,
          "editor.defaultFormatter": "charliermarsh.ruff",
          "editor.tabSize": 4,
          "editor.codeActionsOnSave": {
            "source.fixAll": "explicit",
            "source.organizeImports": "explicit"
          }
        },
        /* "mypy-type-checker.severity": {
          "error": "Warning",
          "note": "Information"
        }, */
        // #### End Python Settings ####

        // #### Begin Markdown Settings ####
        "[markdown]": {
          "editor.defaultFormatter": "darkriszty.markdown-table-prettify",
          "rewrap.autoWrap.enabled": false,
          "rewrap.wrappingColumn": 180
        },
        "markdownlint.config": {
          "MD030": false,
          "MD033": false,
          "MD024": {
            "siblings_only": true
          }
        },
        "markdown.extension.orderedList.autoRenumber": true,
        "markdown.extension.toc.levels": "2..6",
        "markdown.extension.orderedList.marker": "one",
        // #### End Markdown Settings ####

        // #### Begin Shell/Bash Settings ####
        "shellcheck.customArgs": [
          "-x" // allows shellcheck to evaluate "sourced" scripts. see https://www.shellcheck.net/wiki/SC1091
        ],
        "shellcheck.exclude": [
          "SC2188" // This is excluded here because inline disable doesnt seem to work for this rule.
        ],
        // #### End Shell/Bash Settings ####

        // #### Begin Kubernetes/Helm Settings ####
        "vs-kubernetes": {
          "vscode-kubernetes.kubectl-path": "/home/vscode/.local/share/mise/installs/kubectl/latest/bin/kubectl"
        },
        "helm-intellisense.lintFileOnSave": true,
        "helm-intellisense.customValueFileNames": [
          "values.yaml"
        ],
        // #### End Kubernetes/Helm Settings ####

        // #### Begin JavaScript/TypeScript Settings ####
        "[groovy]": {
          "editor.tabSize": 2,
          "editor.insertSpaces": true
        },
        "[jenkinsfile]": {
          "editor.tabSize": 2,
          "editor.insertSpaces": true
        },
        // #### End JavaScript/TypeScript Settings ####

        // #### Begin PowerShell Settings ####
        "powershell.powerShellAdditionalExePaths": {
          "Powershell7": "/home/vscode/.local/share/mise/installs/powershell/latest/pwsh"
        },
        "powershell.powerShellDefaultVersion": "Powershell7",
        "omnisharp.autoStart": false,
        // #### End PowerShell Settings ####

        // #### Begin Spell Checker Settings ####
        "cSpell": {
          "enabledLanguageIds": [
            "asciidoc",
            "c",
            "cpp",
            "csharp",
            "css",
            "dockerfile",
            "git-commit",
            "go",
            "graphql",
            "handlebars",
            "haskell",
            "html",
            "jade",
            "java",
            "javascript",
            "javascriptreact",
            "json",
            "jsonc",
            "latex",
            "less",
            "markdown",
            "php",
            "plaintext",
            "python",
            "pug",
            "restructuredtext",
            "rust",
            "shellscript",
            "scala",
            "scss",
            "text",
            "typescript",
            "typescriptreact",
            "yaml"
          ],
          "enableFiletypes": ["terraform"],
          "blockCheckingWhenAverageChunkSizeGreaterThan": 10000,
          "blockCheckingWhenLineLengthGreaterThan": 10000,
          "blockCheckingWhenTextChunkSizeGreaterThan": 10000,
          "allowCompoundWords": true
        },
        // #### End Spell Checker Settings ####

        // #### Begin TODO Tree Settings ####
        "todo-tree.general.tags": [
          "TODO:",
          "NOTE:",
          "WARNING:",
          "FIXME:"
        ],
        "todo-tree.highlights.customHighlight": {
          "TODO:": {
            "hideFromTree": false,
            "icon": "check",
            "background": "#00620a",
            "foreground": "#fff",
            "iconColour": "#00620a",
            "type": "whole-line",
            "gutterIcon": true
          },
          "NOTE:": {
            "hideFromTree": true,
            "icon": "note",
            "background": "#1422e1",
            "foreground": "#fff",
            "iconColour": "#1422e1",
            "type": "tag-and-comment",
            "gutterIcon": true
          },
          "WARNING:": {
            "hideFromTree": true,
            "icon": "alert",
            "background": "#ff8716",
            "foreground": "#000",
            "iconColour": "#ff8716",
            "type": "tag-and-comment",
            "gutterIcon": true
          },
          "FIXME:": {
            "hideFromTree": false,
            "icon": "bug",
            "background": "#840000",
            "foreground": "#fff",
            "iconColour": "#e30000",
            "type": "whole-line",
            "gutterIcon": true
          }
        }
        // #### End TODO Tree Settings ####
        ,
        // #### Begin PSI Header Settings ####
        "psi-header.config": {
          "company": "<Add your company name here>"
        },
        "psi-header.changes-tracking": {
          "isActive": false,
          "autoHeader": "autoSave",
          "exclude": ["json"],
          "excludeGlob": ["**/.git/**"]
        },
        "psi-header.variables": [["projectCreationYear", "2025"]],
        "psi-header.lang-config": [
          {
            "language": "*",
            "begin": "",
            "end": "",
            "prefix": "// "
          },
          {
            "language": "dockerfile",
            "begin": "",
            "end": "",
            "prefix": "# "
          },
          {
            "language": "markdown",
            "begin": "",
            "end": "",
            "prefix": "> "
          },
          {
            "language": "powershell",
            "begin": "<#",
            "end": "#>",
            "prefix": ""
          },
          {
            "language": "python",
            "begin": "",
            "end": "",
            "prefix": "# "
          },
          {
            "language": "shellscript",
            "begin": "",
            "end": "",
            "prefix": "# "
          },
          {
            "language": "terraform",
            "begin": "",
            "end": "",
            "prefix": "# "
          },
          {
            "language": "yaml",
            "begin": "",
            "end": "",
            "prefix": "# "
          },
          {
            "language": "env",
            "begin": "",
            "end": "",
            "prefix": "# "
          }
        ],
        "psi-header.templates": [
          {
            "language": "markdown",
            "template": [
              "Add your template text here"
            ]
          },
          {
            "language": "powershell",
            "template": [
              ".DESCRIPTION",
              "  Add your template text here"
            ]
          },
          {
            "language": "*",
            "template": [
              "  Add your template text here"
            ]
          }
        ]
        // #### End PSI Header Settings ####
      }
    }
  }
}
