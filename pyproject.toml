# cspell:ignore pyyaml pytest mypy pkgs datetimez Pyflakes Pylint isort pycodestyle pydocstyle pyupgrade pyproject orjson pybuild 

####### Example pyproject.toml file. #######
# Edit this file for your own Python project.

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pip]
index-url = "<add your index URL here>"

[project]
name = "project-name"
dynamic = ["version"]
description = "<project descripton>."
readme = "README.md"
requires-python = ">=3.12"
license = "<add license here>"
keywords = ["<add your keywords here>", "Config.yaml", "infrastructure", "helm"]
authors = [{ name = "author name", email = "author@myemail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

dependencies = [
  # These are some sample dependencies, put your packages dependencies here so when it is innstalled, 
  # the sub packages will also automatically be installed.
  # https://pypi.org/project/fabric/
  "fabric~=3.2",
  # https://pypi.org/project/GitPython/
  "gitpython~=3.1",
  # https://pypi.org/project/kubernetes/
  "kubernetes~=32.0",
  # https://pypi.org/project/loguru/
  "loguru~=0.7",
  # https://pypi.org/project/orjson/
  "orjson~=3.10",
  # https://pypi.org/project/prettytable/
  "prettytable~=3.14",
  # https://pypi.org/project/python-hcl2/
  "python-hcl2~=7.0",
  # https://pypi.org/project/PyYAML/
  "pyyaml~=6.0",
  # https://pypi.org/project/requests/
  "requests~=2.32",
  # https://pypi.org/project/termcolor/
  "termcolor~=2.5",
]

[project.optional-dependencies]
### These are mainly here for documentation as we don't do a pip install -e .[dev] ###
# We install them in our requirements.txt file.
dev = [
  # https://pypi.org/project/hatch/
  "hatch~=1.14",
  # https://pypi.org/project/pytest/
  "pytest~=8.3",
  # https://pypi.org/project/pytest-mock/
  "pytest-mock~=3.14",
  # https://pypi.org/project/pytest-cov/
  "pytest-cov~=6.0",
  # https://pypi.org/project/ruff/
  "ruff~=0.9",

  ### Type stubs for type checking. ###
  "kubernetes-typed~=18.20",
  "types-PyYAML~=6.0",
  "types-requests",
]

[project.urls]
Documentation = "https://www.github.com/yourusername/project-name/blob/main/README.md"
Homepage = "https://www.github.com/yourusername/project-name"
Source = "https://www.github.com/yourusername/project-name"

[tool.hatch.version]
path = "src/<project>/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/<project>"]

# Python Package Repository Configuration
# Configure these settings for your package repository
[tool.pybuild]
# For PyPI (default):
publish_base_url = "https://upload.pypi.org/legacy/"
install_index_url = "https://pypi.org/simple/"
install_extra_index_url = ""

# For Artifactory (example):
# publish_base_url = "https://your-artifactory.com/artifactory/api/pypi/your-repo"
# install_index_url = "https://your-artifactory.com/artifactory/api/pypi/your-repo/simple"
# install_extra_index_url = "https://your-artifactory.com/artifactory/api/pypi/your-other-repo/simple"

# For Nexus Repository (example):
# publish_base_url = "https://your-nexus.com/repository/pypi-internal/"
# install_index_url = "https://your-nexus.com/repository/pypi-internal/simple"
# install_extra_index_url = "https://your-nexus.com/repository/pypi-public/simple"

# Environment suffixes (optional)
dev_suffix = "-dev"
prod_suffix = ""

# Authentication Note:
# For authentication, export environment variables:
#   HATCH_INDEX_USER=your_username
#   HATCH_INDEX_AUTH=your_password
# These variables are used by the pybuild.py script for repository authentication.

[tool.hatch.envs.types]
extra-dependencies = ["mypy~=1.15.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src tests}"

[tool.coverage.run]
source_pkgs = ["<project>", "tests"]
branch = true
parallel = true
omit = ["src/<project>/__about__.py"]

[tool.coverage.paths]
project = ["src", "*/<project>/src"]
tests = ["tests", "*/<project>/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.pytest.ini_options]
markers = ["order(number): runs tests in the order given", "serial"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "E",     # pycodestyle errors
  "W",     # pycodestyle warnings
  "I",     # isort
  "N",     # pep8-naming
  "D",     # pydocstyle
  "UP",    # pyupgrade
  "YTT",   # flake8-2020
  "ANN",   # flake8-annotations
  "ASYNC", # flake8-async
  "S",     # flake8-bandit
  "B",     # flake8-bugbear
  "A",     # flake8-builtins
  "COM",   # flake8-commas
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "T10",   # flake8-debugger
  "EM",    # flake8-errmsg
  "EXE",   # flake8-executable
  "ISC",   # flake8-implicit-str-concat
  "ICN",   # flake8-import-conventions
  "LOG",   # flake8-logging
  "G",     # flake8-logging-format
  "INP",   # flake8-no-pep420
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "RSE",   # flake8-raise
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SLOT",  # flake8-slots
  "SIM",   # flake8-simplify
  "TID",   # flake8-tidy-imports
  "TC",    # flake8-type-checking
  "INT",   # flake8-gettext
  "ARG",   # flake8-unused-arguments
  "TD",    # flake8-todos
  "ERA",   # eradicate
  "PL",    # Pylint
]
ignore = [
  "E501",    # line-too-long
  "BLE001",  # blind-except
  "D202",    # no-blank-line-after-function
  "T201",    # print
  "D401",    # non-imperative-mood
  "D205",    # blank-line-after-summary
  "PLR0912", # too-many-branches
  "PLR0915", # too-many-statements
  "S603",    # subprocess-without-shell-equals-true
  "TD002",   # missing-todo-author
  "TD003",   # missing-todo-link
]
task-tags = ["FIXME", "TODO"]
unfixable = ["B"]

[tool.ruff.lint.pylint]
max-args = 8

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

#[tool.ruff.format]
# 5. Use single quotes for non-triple-quoted strings.
# quote-style = "single"
